program JogoAdvinhacao;
{
  Jogo de adivinha√ß√£o que demonstra uso de:
  - Gera√ß√£o de n√∫meros aleat√≥rios (simulada)
  - Estruturas de controle
  - Contadores e valida√ß√µes
}

var
    numeroSecreto, tentativa, numTentativas, maxTentativas: integer;
    acertou, jogando: boolean;

{ Fun√ß√£o para simular gera√ß√£o de n√∫mero aleat√≥rio }
function gerarNumeroAleatorio(min, max: integer): integer;
var
    seed: integer;
begin
    { Simula√ß√£o simples de n√∫mero aleat√≥rio baseado em entrada do usu√°rio }
    writeln('Para gerar n√∫mero aleat√≥rio, digite um n√∫mero qualquer:');
    readln(seed);
    
    { F√≥rmula simples para gerar n√∫mero pseudo-aleat√≥rio }
    seed := (seed * 1103515245 + 12345) mod 2147483647;
    gerarNumeroAleatorio := (seed mod (max - min + 1)) + min;
end;

{ Procedimento para exibir dicas }
procedure darDica(tentativa, numeroSecreto: integer);
begin
    if tentativa < numeroSecreto then
    begin
        writeln('Muito baixo! Tente um n√∫mero maior.');
    end
    else if tentativa > numeroSecreto then
    begin
        writeln('Muito alto! Tente um n√∫mero menor.');
    end;
end;

{ Procedimento para exibir resultado final }
procedure exibirResultado(acertou: boolean; numTentativas: integer; numeroSecreto: integer);
begin
    writeln('');
    writeln('=== RESULTADO ===');
    
    if acertou then
    begin
        writeln('üéâ Parab√©ns! Voc√™ acertou!');
        writeln('N√∫mero de tentativas: ', numTentativas);
        
        if numTentativas <= 3 then
            writeln('Excelente! Voc√™ √© um mestre!')
        else if numTentativas <= 6 then
            writeln('Muito bom!')
        else
            writeln('Voc√™ conseguiu, mas pode melhorar!');
    end
    else
    begin
        writeln('üòû Que pena! Voc√™ n√£o conseguiu adivinhar.');
        writeln('O n√∫mero secreto era: ', numeroSecreto);
        writeln('Tente novamente na pr√≥xima vez!');
    end;
end;

{ Fun√ß√£o para validar entrada do usu√°rio }
function lerTentativa(min, max: integer): integer;
var
    valor: integer;
    valido: boolean;
begin
    valido := false;
    
    repeat
        writeln('Digite um n√∫mero entre ', min, ' e ', max, ':');
        readln(valor);
        
        if (valor >= min) and (valor <= max) then
        begin
            valido := true;
            lerTentativa := valor;
        end
        else
        begin
            writeln('N√∫mero inv√°lido! Deve estar entre ', min, ' e ', max, '.');
        end;
    until valido;
end;

{ Procedimento principal do jogo }
procedure jogar();
begin
    { Configura√ß√£o do jogo }
    writeln('=== JOGO DE ADIVINHA√á√ÉO ===');
    writeln('Vou pensar em um n√∫mero entre 1 e 100.');
    writeln('Voc√™ tem at√© 10 tentativas para acertar!');
    writeln('');
    
    { Gerar n√∫mero secreto }
    numeroSecreto := gerarNumeroAleatorio(1, 100);
    maxTentativas := 10;
    numTentativas := 0;
    acertou := false;
    
    { Loop principal do jogo }
    while (numTentativas < maxTentativas) and (not acertou) do
    begin
        numTentativas := numTentativas + 1;
        writeln('Tentativa ', numTentativas, ' de ', maxTentativas);
        
        tentativa := lerTentativa(1, 100);
        
        if tentativa = numeroSecreto then
        begin
            acertou := true;
        end
        else
        begin
            darDica(tentativa, numeroSecreto);
            writeln('Tentativas restantes: ', maxTentativas - numTentativas);
            writeln('');
        end;
    end;
    
    { Exibir resultado }
    exibirResultado(acertou, numTentativas, numeroSecreto);
end;

{ Fun√ß√£o para perguntar se quer jogar novamente }
function jogarNovamente(): boolean;
var
    resposta: string;
begin
    writeln('');
    writeln('Deseja jogar novamente? (s/n):');
    readln(resposta);
    
    jogarNovamente := (resposta = 's') or (resposta = 'S') or (resposta = 'sim') or (resposta = 'SIM');
end;

{ Programa principal }
begin
    writeln('üéÆ Bem-vindo ao Jogo de Adivinha√ß√£o! üéÆ');
    
    repeat
        jogar();
        jogando := jogarNovamente();
    until not jogando;
    
    writeln('');
    writeln('Obrigado por jogar! At√© a pr√≥xima! üëã');
end.
